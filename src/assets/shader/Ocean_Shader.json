{
  "id": 250,
  "name": "Ocean Shader",
  "fragment": "// Ported from https://www.otakhi.com/public/mfdesigner/Scenes/Ocean%20Waves\n// Copyright unknown\nprecision highp float;\nprecision highp int;\n\nuniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\nvarying vec4 HPosition;\nvarying vec2 UV;\nvarying vec3 T2WXf1;\nvarying vec3 T2WXf2;\nvarying vec3 T2WXf3;\nvarying vec2 bumpUV0;\nvarying vec2 bumpUV1;\nvarying vec2 bumpUV2;\nvarying vec3 WorldView;\nvarying float wh;\n\nuniform float HDRMultiplier;\nuniform float Kr;\nuniform float FresnelBias;\nuniform float FresnelExp;\nuniform float KWater;\nuniform vec3 DeepColor;\nuniform vec3 ShallowColor;\nuniform vec3 ReflTint;\n\nuniform sampler2D normalMap;\nuniform samplerCube envMap;\n\nvoid main() {\n\t// sum normal map\n\tvec4 t0 = texture2D( normalMap, bumpUV0 )*2.0-1.0;\n\tvec4 t1 = texture2D( normalMap, bumpUV1 )*2.0-1.0;\n\tvec4 t2 = texture2D( normalMap, bumpUV2 )*2.0-1.0;\n\tvec3 Nt = t0.xyz + t1.xyz + t2.xyz;\n\n\tmat3 m;\n\tm[0] = T2WXf1;\n\tm[1] = T2WXf2;\n\tm[2] = T2WXf3;\n\n\tvec3 Nw = m * Nt;\n\tvec3 Nn = normalize(Nw);\n\n\tvec3 Vn = normalize( WorldView );\n\tvec3 R = reflect(-Vn, Nn);\n\n\tvec4 reflection = textureCube(envMap, R);\n\treflection.rgb *= (1.0 + reflection.a*HDRMultiplier);\n\n\tfloat facing = 1.0 - max(dot(Vn, Nn), 0.0);\n\n\tfloat fres = Kr*(FresnelBias+(1.0 - FresnelBias)*pow(facing,FresnelExp));\n\n\tvec3 waterColor = KWater * mix(DeepColor, ShallowColor, facing);\n\n\tvec3 result =  mix(waterColor, (reflection.rgb * ReflTint), fres);\n\n\tgl_FragColor = vec4(result.rgb, 1.0);\n}",
  "vertex": "precision highp float;\nprecision highp int;\n\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\n\nuniform float time;\nuniform float WaveAmp;\nuniform float WaveFreq;\nuniform float BumpScale;\nuniform float TexReptX;\nuniform float TexReptY;\nuniform float BumpSpeedX;\nuniform float BumpSpeedY;\n\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n\nconst int NWAVES = 2;\nstruct Wave {\n\tfloat freq;\n\tfloat amp;\n\tfloat phase;\n\tvec2 dir;\n};\n\nWave wave[NWAVES];\n\nvarying vec4 HPosition;\nvarying vec2 UV;\nvarying vec3 T2WXf1;\nvarying vec3 T2WXf2;\nvarying vec3 T2WXf3;\nvarying vec2 bumpUV0;\nvarying vec2 bumpUV1;\nvarying vec2 bumpUV2;\nvarying vec3 WorldView;\nvarying float wh;\n\n\nfloat evaluateWave(Wave w, vec2 pos, float t)\n{\n\treturn w.amp * sin( dot(w.dir, pos) * w.freq + t * w.phase);\n}\n\nfloat evaluateWaveDeriv(Wave w, vec2 pos, float t)\n{\n\treturn w.freq*w.amp*cos( dot(w.dir, pos) * w.freq + t * w.phase);\n}\n\nfloat evaluateWaveSharp(Wave w, vec2 pos, float t, float k)\n{\n\treturn w.amp * pow(sin( dot(w.dir, pos)*w.freq + t*w.phase)*0.5 + 0.5, k);\n}\n\nfloat evaluateWaveDerivSharp(Wave w, vec2 pos, float t, float k)\n{\n\treturn k*w.freq*w.amp*pow(sin( dot(w.dir, pos)*w.freq + t*w.phase)*0.5 + 0.5, k-1.) * cos(dot(w.dir, pos)*w.freq + t*w.phase);\n}\n\nvoid main() {\n\twave[0].freq = cos(WaveFreq);\n\twave[0].amp = WaveAmp;\n\twave[0].phase = 0.5;\n\twave[0].dir = vec2(-1.3, 0.0);\n\twave[1].freq = WaveFreq * 2.0;\n\twave[1].amp = WaveAmp*0.5;\n\twave[1].phase = 1.3;\n\twave[1].dir = vec2(0.2, -0.7);\n\tvec4 Po = vec4(position.xyz, 1.0);\n\t\n\tfloat ddx = 0.0, ddy = 0.0;\n\tfor (int i=0; i<1; i++)\n\t{\n\t\tPo.y += evaluateWave(wave[i], Po.xz, time);\n\t\tfloat deriv = evaluateWaveDeriv(wave[i], Po.xz, time);\n\t\tddx += deriv * wave[i].dir.x;\n\t\tddy += deriv * wave[i].dir.y;\n\t}\n\twh = Po.y / WaveAmp;\n\tvec3 B = vec3(1, ddx, 0);\n\tvec3 T = vec3(0, ddy, 1);\n\tvec3 N = vec3(-ddx, 1, -ddy);\n\n\tvec2 TextureScale = vec2(TexReptX, TexReptY);\n\tvec2 BumpSpeed = vec2(BumpSpeedX, BumpSpeedY);\n\tUV = uv.xy * TextureScale;\n\tfloat cycle = mod(time, 100.);\n\tbumpUV0.xy = uv.xy * TextureScale + cycle * BumpSpeed;\n\tbumpUV1.xy = uv.xy * TextureScale *2.0 + cycle*BumpSpeed*4.0;\n\tbumpUV2.xy = uv.xy * TextureScale *4.0 + cycle*BumpSpeed*8.0;\n\n\tmat3 objToTangentSpace;\n\tobjToTangentSpace[0] = BumpScale * normalize(T);\n\tobjToTangentSpace[1] = BumpScale * normalize(B);\n\tobjToTangentSpace[2] = normalize(N);\n\n\t//T2WXf1.xyz = objToTangentSpace * modelMatrix[0].xyz;\n\t//T2WXf2.xyz = objToTangentSpace * modelMatrix[1].xyz;\n\t//T2WXf3.xyz = objToTangentSpace * modelMatrix[2].xyz;\n\n\tT2WXf1.xyz =  modelMatrix[0].xyz * objToTangentSpace;\n\tT2WXf2.xyz =  modelMatrix[1].xyz * objToTangentSpace;\n\tT2WXf3.xyz =  modelMatrix[2].xyz * objToTangentSpace;\n\n\n\tvec3 Pw = (Po * modelMatrix).xyz;\n\tWorldView = cameraPosition - Pw;\n\t\n\tgl_Position = projectionMatrix * modelViewMatrix * Po;\n    //gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}",
  "uniforms": {
    "cameraPosition": {
      "name": "cameraPosition",
      "displayName": null,
      "type": "v3",
      "glslType": "vec3",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "HDRMultiplier": {
      "name": "HDRMultiplier",
      "displayName": null,
      "type": "f",
      "glslType": "float",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "Kr": {
      "name": "Kr",
      "displayName": null,
      "type": "f",
      "glslType": "float",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "FresnelBias": {
      "name": "FresnelBias",
      "displayName": null,
      "type": "f",
      "glslType": "float",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "FresnelExp": {
      "name": "FresnelExp",
      "displayName": null,
      "type": "f",
      "glslType": "float",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "KWater": {
      "name": "KWater",
      "displayName": null,
      "type": "f",
      "glslType": "float",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "DeepColor": {
      "name": "DeepColor",
      "displayName": null,
      "type": "c",
      "glslType": "vec3",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "ShallowColor": {
      "name": "ShallowColor",
      "displayName": null,
      "type": "c",
      "glslType": "vec3",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "ReflTint": {
      "name": "ReflTint",
      "displayName": null,
      "type": "c",
      "glslType": "vec3",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "normalMap": {
      "name": "normalMap",
      "displayName": null,
      "type": "t",
      "glslType": "sampler2D",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "envMap": {
      "name": "envMap",
      "displayName": null,
      "type": "t",
      "glslType": "samplerCube",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "WaveAmp": {
      "name": "WaveAmp",
      "displayName": null,
      "type": "f",
      "glslType": "float",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "WaveFreq": {
      "name": "WaveFreq",
      "displayName": null,
      "type": "f",
      "glslType": "float",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "BumpScale": {
      "name": "BumpScale",
      "displayName": null,
      "type": "f",
      "glslType": "float",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "TexReptX": {
      "name": "TexReptX",
      "displayName": null,
      "type": "f",
      "glslType": "float",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "TexReptY": {
      "name": "TexReptY",
      "displayName": null,
      "type": "f",
      "glslType": "float",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "BumpSpeedX": {
      "name": "BumpSpeedX",
      "displayName": null,
      "type": "f",
      "glslType": "float",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "BumpSpeedY": {
      "name": "BumpSpeedY",
      "displayName": null,
      "type": "f",
      "glslType": "float",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    },
    "time": {
      "name": "time",
      "displayName": null,
      "type": "f",
      "glslType": "float",
      "useGridHelper": false,
      "useRange": false,
      "range": null,
      "isRandom": false,
      "randomRange": null,
      "useToggle": false,
      "toggle": null,
      "description": ""
    }
  },
  "url": "http://shaderfrog.com/app/view/250",
  "user": {
    "username": "andrewray",
    "url": "http://shaderfrog.com/app/profile/andrewray"
  }
}